From 0845b6d86735331e138a3730400de593b82c5d7a Mon Sep 17 00:00:00 2001
From: Your Name <you@example.com>
Date: Wed, 20 Aug 2025 02:54:04 +0000
Subject: [PATCH] fix opencv bug

---
 nanoowl/owl_drawing.py  | 14 +++++++++-----
 nanoowl/tree_drawing.py | 14 +++++++++-----
 2 files changed, 18 insertions(+), 10 deletions(-)

diff --git a/nanoowl/owl_drawing.py b/nanoowl/owl_drawing.py
index d580398..09f6c6c 100644
--- a/nanoowl/owl_drawing.py
+++ b/nanoowl/owl_drawing.py
@@ -36,7 +36,10 @@ def get_colors(count: int):
 def draw_owl_output(image, output: OwlDecodeOutput, text: List[str], draw_text=True):
     is_pil = not isinstance(image, np.ndarray)
     if is_pil:
-        image = np.asarray(image)
+        image_np = np.asarray(image).copy()
+    else:
+        image_np = image.copy()
+
     font = cv2.FONT_HERSHEY_SIMPLEX
     font_scale = 0.75
     colors = get_colors(len(text))
@@ -49,7 +52,7 @@ def draw_owl_output(image, output: OwlDecodeOutput, text: List[str], draw_text=T
         pt0 = (box[0], box[1])
         pt1 = (box[2], box[3])
         cv2.rectangle(
-            image,
+            image_np,
             pt0,
             pt1,
             colors[label_index],
@@ -60,7 +63,7 @@ def draw_owl_output(image, output: OwlDecodeOutput, text: List[str], draw_text=T
             offset_x = 0
             label_text = text[label_index]
             cv2.putText(
-                image,
+                image_np,
                 label_text,
                 (box[0] + offset_x, box[1] + offset_y),
                 font,
@@ -70,5 +73,6 @@ def draw_owl_output(image, output: OwlDecodeOutput, text: List[str], draw_text=T
                 cv2.LINE_AA
             )
     if is_pil:
-        image = PIL.Image.fromarray(image)
-    return image
\ No newline at end of file
+        return PIL.Image.fromarray(image_np)
+    else:
+        return image_np
diff --git a/nanoowl/tree_drawing.py b/nanoowl/tree_drawing.py
index c3f8234..ba04bcf 100644
--- a/nanoowl/tree_drawing.py
+++ b/nanoowl/tree_drawing.py
@@ -38,7 +38,10 @@ def draw_tree_output(image, output: TreeOutput, tree: Tree, draw_text=True, num_
     detections = output.detections
     is_pil = not isinstance(image, np.ndarray)
     if is_pil:
-        image = np.asarray(image)
+        image_np = np.asarray(image).copy()
+    else:
+        image_np = image.copy()
+
     font = cv2.FONT_HERSHEY_SIMPLEX
     font_scale = 0.75
     colors = get_colors(num_colors)
@@ -50,7 +53,7 @@ def draw_tree_output(image, output: TreeOutput, tree: Tree, draw_text=True, num_
         pt1 = (box[2], box[3])
         box_depth = min(label_depths[i] for i in detection.labels)
         cv2.rectangle(
-            image,
+            image_np,
             pt0,
             pt1,
             colors[box_depth % num_colors],
@@ -62,7 +65,7 @@ def draw_tree_output(image, output: TreeOutput, tree: Tree, draw_text=True, num_
             for label in detection.labels:
                 label_text = label_map[label]
                 cv2.putText(
-                    image,
+                    image_np,
                     label_text,
                     (box[0] + offset_x, box[1] + offset_y),
                     font,
@@ -73,5 +76,6 @@ def draw_tree_output(image, output: TreeOutput, tree: Tree, draw_text=True, num_
                 )
                 offset_y += 18
     if is_pil:
-        image = PIL.Image.fromarray(image)
-    return image
\ No newline at end of file
+        return PIL.Image.fromarray(image_np)
+    else:
+        return image_np
-- 
2.43.0

